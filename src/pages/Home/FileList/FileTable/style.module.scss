@import 'src/assets/css/theme.scss';
@import 'src/assets/css/rwd.scss';

.header,
.file {
  padding: 0px 25px;

  @include breakpoint(l) {
    padding: 0px 20px;
  }

  @include breakpoint(s) {
    padding: 0px 15px;
  }

  .name,
  .size,
  .modify,
  .option {
    display: inline-block;
    padding: 3px 2px;
    height: 30px;
    white-space: nowrap;
    color: theme(black, light);
    vertical-align: middle;

    svg {
      display: inline-block;
      padding: 4px;
      width: 22px;
      height: 22px;
      vertical-align: middle;
    }

    .text {
      display: inline-block;
      width: calc(100% - 4px);
      line-height: 30px;
      white-space: nowrap;
      text-overflow: ellipsis;
      vertical-align: middle;
      overflow: hidden;

      @include breakpoint(m) {
        line-height: 18px;
      }

      .subLine {
        display: none;
        font-size: 12px;
        line-height: 12px;
        color: theme(gray, deep);

        @include breakpoint(m) {
          display: block;
        }
      }
    }

    .iconText {
      max-width: calc(100% - 4px - 4px - 26px);
    }
  }

  .name {
    width: calc(100% - 4px - 120px - 150px - 70px);
    min-width: calc(65% - 4px - 70px);

    @include breakpoint(m) {
      width: calc(100% - 4px - 70px);
    }
  }

  .size {
    width: calc(120px - 4px);
    max-width: calc(15% - 4px);

    @include breakpoint(m) {
      display: none;
    }
  }

  .modify {
    width: calc(150px - 4px);
    max-width: calc(20% - 4px);

    @include breakpoint(m) {
      display: none;
    }
  }

  .option {
    width: calc(70px - 4px);
    text-align: center;

    @include breakpoint(m) {
      max-width: calc(70px - 4px);
    }

    svg {
      margin: 0px 0px 0px 3px;

      &:hover {
        padding: 2px;
        width: 26px;
        height: 26px;
      }
    }
  }
}

.header {
  font-weight: bold;
  border-bottom: 1px solid theme(gray, light);

  @include breakpoint(m) {
    display: none;
  }
}

.file {
  cursor: pointer;

  &:hover {
    background-color: theme(blue, light);
  }
}